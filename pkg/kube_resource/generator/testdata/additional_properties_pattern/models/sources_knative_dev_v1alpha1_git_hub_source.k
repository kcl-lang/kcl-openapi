"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema GitHubSource:
    """
    sources knative dev v1alpha1 git hub source

    Attributes
    ----------
    apiVersion : str, default is "sources.knative.dev/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "GitHubSource", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : SourcesKnativeDevV1alpha1GitHubSourceSpec, default is Undefined, optional
        spec
    status : SourcesKnativeDevV1alpha1GitHubSourceStatus, default is Undefined, optional
        status
    """


    apiVersion: "sources.knative.dev/v1alpha1" = "sources.knative.dev/v1alpha1"

    kind: "GitHubSource" = "GitHubSource"

    metadata?: v1.ObjectMeta

    spec?: SourcesKnativeDevV1alpha1GitHubSourceSpec

    status?: SourcesKnativeDevV1alpha1GitHubSourceStatus


schema SourcesKnativeDevV1alpha1GitHubSourceSpec:
    """
    sources knative dev v1alpha1 git hub source spec

    Attributes
    ----------
    eventTypes : [str], default is Undefined, required
        List of webhooks to enable on the selected GitHub repository.
    ownerAndRepository : str, default is Undefined, required
        Reference to the GitHub repository to receive events from, in the format user/repository.
    serviceAccountName : str, default is Undefined, optional
        service account name
    accessToken : SourcesKnativeDevV1alpha1GitHubSourceSpecAccessToken, default is Undefined, required
        access token
    ceOverrides : SourcesKnativeDevV1alpha1GitHubSourceSpecCeOverrides, default is Undefined, optional
        ce overrides
    secretToken : SourcesKnativeDevV1alpha1GitHubSourceSpecSecretToken, default is Undefined, required
        secret token
    sink : SourcesKnativeDevV1alpha1GitHubSourceSpecSink, default is Undefined, optional
        sink
    """


    eventTypes: [str]

    ownerAndRepository: str

    serviceAccountName?: str

    accessToken: SourcesKnativeDevV1alpha1GitHubSourceSpecAccessToken

    ceOverrides?: SourcesKnativeDevV1alpha1GitHubSourceSpecCeOverrides

    secretToken: SourcesKnativeDevV1alpha1GitHubSourceSpecSecretToken

    sink?: SourcesKnativeDevV1alpha1GitHubSourceSpecSink


    check:
        len(eventTypes) >= 1
        len(ownerAndRepository) >= 1


schema SourcesKnativeDevV1alpha1GitHubSourceSpecAccessToken:
    """
    Access token for the GitHub API.

    Attributes
    ----------
    secretKeyRef : SourcesKnativeDevV1alpha1GitHubSourceSpecAccessTokenSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    secretKeyRef?: SourcesKnativeDevV1alpha1GitHubSourceSpecAccessTokenSecretKeyRef


schema SourcesKnativeDevV1alpha1GitHubSourceSpecAccessTokenSecretKeyRef:
    """
    A reference to a Kubernetes Secret object containing a GitHub access token.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key which contains the GitHub access token within the Kubernetes Secret object referenced by name.
    name : str, default is Undefined, required
        The name of the Kubernetes Secret object which contains the GitHub access token.
    """


    key: str

    name: str


schema SourcesKnativeDevV1alpha1GitHubSourceSpecCeOverrides:
    """
    Defines overrides to control modifications of the event sent to the sink.

    Attributes
    ----------
    extensions : {str:str}, default is Undefined, required
        extensions
    """


    extensions: {str:str}


    check:
        all _, extensions in extensions {len(extensions) >= 1 if extensions not in [None, Undefined] }


schema SourcesKnativeDevV1alpha1GitHubSourceSpecSecretToken:
    """
    Arbitrary token used to validate requests to webhooks.

    Attributes
    ----------
    secretKeyRef : SourcesKnativeDevV1alpha1GitHubSourceSpecSecretTokenSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    secretKeyRef?: SourcesKnativeDevV1alpha1GitHubSourceSpecSecretTokenSecretKeyRef


schema SourcesKnativeDevV1alpha1GitHubSourceSpecSecretTokenSecretKeyRef:
    """
    A reference to a Kubernetes Secret object containing the webhook token.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key which contains the webhook token within the Kubernetes Secret object referenced by name.
    name : str, default is Undefined, required
        The name of the Kubernetes Secret object which contains the webhook token.
    """


    key: str

    name: str


schema SourcesKnativeDevV1alpha1GitHubSourceSpecSink:
    """
    The destination of events received from webhooks.

    Attributes
    ----------
    uri : str, default is Undefined, optional
        URI to use as the destination of events.
    ref : SourcesKnativeDevV1alpha1GitHubSourceSpecSinkRef, default is Undefined, optional
        ref
    """


    uri?: str

    ref?: SourcesKnativeDevV1alpha1GitHubSourceSpecSinkRef


schema SourcesKnativeDevV1alpha1GitHubSourceSpecSinkRef:
    """
    Reference to an addressable Kubernetes object to be used as the destination of events.

    Attributes
    ----------
    apiVersion : str, default is Undefined, required
        api version
    kind : str, default is Undefined, required
        kind
    name : str, default is Undefined, required
        name
    namespace : str, default is Undefined, optional
        namespace
    """


    apiVersion: str

    kind: str

    name: str

    namespace?: str


    check:
        len(apiVersion) >= 1
        len(kind) >= 1
        len(name) >= 1
        len(namespace) >= 1 if namespace


schema SourcesKnativeDevV1alpha1GitHubSourceStatus:
    """
    sources knative dev v1alpha1 git hub source status

    Attributes
    ----------
    conditions : [SourcesKnativeDevV1alpha1GitHubSourceStatusConditionsItems0], default is Undefined, optional
        conditions
    sinkUri : str, default is Undefined, optional
        sink Uri
    webhookIDKey : str, default is Undefined, optional
        webhook ID key
    """


    conditions?: [SourcesKnativeDevV1alpha1GitHubSourceStatusConditionsItems0]

    sinkUri?: str

    webhookIDKey?: str


schema SourcesKnativeDevV1alpha1GitHubSourceStatusConditionsItems0:
    """
    sources knative dev v1alpha1 git hub source status conditions items0

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        last transition time
    message : str, default is Undefined, optional
        message
    reason : str, default is Undefined, optional
        reason
    severity : str, default is Undefined, optional
        severity
    status : str, default is Undefined, required
        status
    $type : str, default is Undefined, required
        type
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    severity?: str

    status: str

    $type: str


