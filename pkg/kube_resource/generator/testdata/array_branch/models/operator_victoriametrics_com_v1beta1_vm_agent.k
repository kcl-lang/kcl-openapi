"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1


schema VMAgent:
    """
    VMAgent - is a tiny but brave agent, which helps you collect metrics from various sources and stores them in VictoriaMetrics or any other Prometheus-compatible storage system that supports the remote_write protocol.

    Attributes
    ----------
    apiVersion : str, default is "operator.victoriametrics.com/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "VMAgent", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : OperatorVictoriametricsComV1beta1VMAgentSpec, default is Undefined, optional
        spec
    status : OperatorVictoriametricsComV1beta1VMAgentStatus, default is Undefined, optional
        status
    """


    apiVersion: "operator.victoriametrics.com/v1beta1" = "operator.victoriametrics.com/v1beta1"

    kind: "VMAgent" = "VMAgent"

    metadata?: v1.ObjectMeta

    spec?: OperatorVictoriametricsComV1beta1VMAgentSpec

    status?: OperatorVictoriametricsComV1beta1VMAgentStatus


schema OperatorVictoriametricsComV1beta1VMAgentSpec:
    """
    VMAgentSpec defines the desired state of VMAgent

    Attributes
    ----------
    _ : str, default is Undefined, optional
        ParsingError contents error with context if operator was failed to parse json object from kubernetes api server
    affinity : any, default is Undefined, optional
        Affinity If specified, the pod's scheduling constraints.
    claimTemplates : [OperatorVictoriametricsComV1beta1VMAgentSpecClaimTemplatesItems0], default is Undefined, optional
        ClaimTemplates allows adding additional VolumeClaimTemplates for VMAgent in StatefulMode
    configMaps : [str], default is Undefined, optional
        ConfigMaps is a list of ConfigMaps in the same namespace as the vmagent object, which shall be mounted into the vmagent Pods. will be mounted at path  /etc/vm/configs
    containers : [any], default is Undefined, optional
        Containers property allows to inject additions sidecars or to patch existing containers. It can be useful for proxies, backup, etc.
    dnsPolicy : str, default is Undefined, optional
        DNSPolicy set DNS policy for the pod
    enforcedNamespaceLabel : str, default is Undefined, optional
        EnforcedNamespaceLabel enforces adding a namespace label of origin for each alert and metric that is user created. The label value will always be the namespace of the object that is being created.
    externalLabels : {str:str}, default is Undefined, optional
        ExternalLabels The labels to add to any time series scraped by vmagent. it doesn't affect metrics ingested directly by push API's
    extraArgs : {str:str}, default is Undefined, optional
        ExtraArgs that will be passed to  VMAgent pod for example remoteWrite.tmpDataPath: /tmp it would be converted to flag --remoteWrite.tmpDataPath=/tmp
    extraEnvs : [OperatorVictoriametricsComV1beta1VMAgentSpecExtraEnvsItems0], default is Undefined, optional
        ExtraEnvs that will be added to VMAgent pod
    hostNetwork : bool, default is Undefined, optional
        HostNetwork controls whether the pod may use the node network namespace
    host_aliases : [OperatorVictoriametricsComV1beta1VMAgentSpecHostAliasesItems0], default is Undefined, optional
        HostAliases provides mapping between ip and hostnames, that would be propagated to pod, cannot be used with HostNetwork.
    ignoreNamespaceSelectors : bool, default is Undefined, optional
        IgnoreNamespaceSelectors if set to true will ignore NamespaceSelector settings from the podscrape and vmservicescrape configs, and they will only discover endpoints within their current namespace.  Defaults to false.
    imagePullSecrets : [OperatorVictoriametricsComV1beta1VMAgentSpecImagePullSecretsItems0], default is Undefined, optional
        ImagePullSecrets An optional list of references to secrets in the same namespace to use for pulling images from registries see https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod
    initContainers : [any], default is Undefined, optional
        InitContainers allows adding initContainers to the pod definition. Those can be used to e.g. fetch secrets for injection into the vmagent configuration from external sources. Any errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/ Using initContainers for any use case other then secret fetching is entirely outside the scope of what the maintainers will support and by doing so, you accept that this behaviour may break at any time without notice.
    inlineRelabelConfig : [OperatorVictoriametricsComV1beta1VMAgentSpecInlineRelabelConfigItems0], default is Undefined, optional
        InlineRelabelConfig - defines GlobalRelabelConfig for vmagent, can be defined directly at CRD.
    inlineScrapeConfig : str, default is Undefined, optional
        InlineScrapeConfig As scrape configs are appended, the user is responsible to make sure it is valid. Note that using this feature may expose the possibility to break upgrades of VMAgent. It is advised to review VMAgent release notes to ensure that no incompatible scrape configs are going to break VMAgent after the upgrade. it should be defined as single yaml file. inlineScrapeConfig: | - job_name: "prometheus" static_configs: - targets: ["localhost:9090"]
    livenessProbe : any, default is Undefined, optional
        LivenessProbe that will be added CRD pod
    logFormat : str, default is Undefined, optional
        LogFormat for VMAgent to be configured with.
    logLevel : str, default is Undefined, optional
        LogLevel for VMAgent to be configured with. INFO, WARN, ERROR, FATAL, PANIC
    maxScrapeInterval : str, default is Undefined, optional
        MaxScrapeInterval allows limiting maximum scrape interval for VMServiceScrape, VMPodScrape and other scrapes If interval is higher than defined limit, `maxScrapeInterval` will be used.
    minScrapeInterval : str, default is Undefined, optional
        MinScrapeInterval allows limiting minimal scrape interval for VMServiceScrape, VMPodScrape and other scrapes If interval is lower than defined limit, `minScrapeInterval` will be used.
    nodeScrapeRelabelTemplate : [OperatorVictoriametricsComV1beta1VMAgentSpecNodeScrapeRelabelTemplateItems0], default is Undefined, optional
        NodeScrapeRelabelTemplate defines relabel config, that will be added to each VMNodeScrape. it's useful for adding specific labels to all targets
    nodeSelector : {str:str}, default is Undefined, optional
        NodeSelector Define which Nodes the Pods are scheduled on.
    overrideHonorLabels : bool, default is Undefined, optional
        OverrideHonorLabels if set to true overrides all user configured honor_labels. If HonorLabels is set in ServiceScrape or PodScrape to true, this overrides honor_labels to false.
    overrideHonorTimestamps : bool, default is Undefined, optional
        OverrideHonorTimestamps allows to globally enforce honoring timestamps in all scrape configs.
    podScrapeRelabelTemplate : [OperatorVictoriametricsComV1beta1VMAgentSpecPodScrapeRelabelTemplateItems0], default is Undefined, optional
        PodScrapeRelabelTemplate defines relabel config, that will be added to each VMPodScrape. it's useful for adding specific labels to all targets
    podSecurityPolicyName : str, default is Undefined, optional
        PodSecurityPolicyName - defines name for podSecurityPolicy in case of empty value, prefixedName will be used.
    port : str, default is Undefined, optional
        Port listen address
    priorityClassName : str, default is Undefined, optional
        PriorityClassName assigned to the Pods
    probeScrapeRelabelTemplate : [OperatorVictoriametricsComV1beta1VMAgentSpecProbeScrapeRelabelTemplateItems0], default is Undefined, optional
        ProbeScrapeRelabelTemplate defines relabel config, that will be added to each VMProbeScrape. it's useful for adding specific labels to all targets
    readinessGates : [OperatorVictoriametricsComV1beta1VMAgentSpecReadinessGatesItems0], default is Undefined, optional
        ReadinessGates defines pod readiness gates
    readinessProbe : any, default is Undefined, optional
        ReadinessProbe that will be added CRD pod
    remoteWrite : [OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0], default is Undefined, optional
        RemoteWrite list of victoria metrics /some other remote write system for vm it must looks like: http://victoria-metrics-single:8429/api/v1/write or for cluster different url https://github.com/VictoriaMetrics/VictoriaMetrics/tree/master/app/vmagent#splitting-data-streams-among-multiple-systems
    replicaCount : int, default is Undefined, optional
        ReplicaCount is the expected size of the VMAgent cluster. The controller will eventually make the size of the running cluster equal to the expected size. NOTE enable VMSingle deduplication for replica usage
    runtimeClassName : str, default is Undefined, optional
        RuntimeClassName - defines runtime class for kubernetes pod. https://kubernetes.io/docs/concepts/containers/runtime-class/
    schedulerName : str, default is Undefined, optional
        SchedulerName - defines kubernetes scheduler name
    scrapeInterval : str, default is Undefined, optional
        ScrapeInterval defines how often scrape targets by default
    scrapeTimeout : str, default is Undefined, optional
        ScrapeTimeout defines global timeout for targets scrape
    secrets : [str], default is Undefined, optional
        Secrets is a list of Secrets in the same namespace as the vmagent object, which shall be mounted into the vmagent Pods. will be mounted at path /etc/vm/secrets
    securityContext : any, default is Undefined, optional
        SecurityContext holds pod-level security attributes and common container settings. This defaults to the default PodSecurityContext.
    selectAllByDefault : bool, default is Undefined, optional
        SelectAllByDefault changes default behavior for empty CRD selectors, such ServiceScrapeSelector. with selectAllScrapes: true and empty serviceScrapeSelector and ServiceScrapeNamespaceSelector Operator selects all exist serviceScrapes with selectAllScrapes: false - selects nothing
    serviceAccountName : str, default is Undefined, optional
        ServiceAccountName is the name of the ServiceAccount to use to run the VMAgent Pods.
    serviceScrapeRelabelTemplate : [OperatorVictoriametricsComV1beta1VMAgentSpecServiceScrapeRelabelTemplateItems0], default is Undefined, optional
        ServiceScrapeRelabelTemplate defines relabel config, that will be added to each VMServiceScrape. it's useful for adding specific labels to all targets
    serviceScrapeSpec : any, default is Undefined, optional
        ServiceScrapeSpec that will be added to vmagent VMServiceScrape spec
    shardCount : int, default is Undefined, optional
        ShardCount - numbers of shards of VMAgent in this case operator will use 1 deployment/sts per shard with replicas count according to spec.replicas https://victoriametrics.github.io/vmagent.html#scraping-big-number-of-targets
    startupProbe : any, default is Undefined, optional
        StartupProbe that will be added to CRD pod
    statefulMode : bool, default is Undefined, optional
        StatefulMode enables StatefulSet for `VMAgent` instead of Deployment it allows using persistent storage for vmagent's persistentQueue
    statefulRollingUpdateStrategy : str, default is Undefined, optional
        StatefulRollingUpdateStrategy allows configuration for strategyType set it to RollingUpdate for disabling operator statefulSet rollingUpdate
    staticScrapeRelabelTemplate : [OperatorVictoriametricsComV1beta1VMAgentSpecStaticScrapeRelabelTemplateItems0], default is Undefined, optional
        StaticScrapeRelabelTemplate defines relabel config, that will be added to each VMStaticScrape. it's useful for adding specific labels to all targets
    terminationGracePeriodSeconds : int, default is Undefined, optional
        TerminationGracePeriodSeconds period for container graceful termination
    tolerations : [OperatorVictoriametricsComV1beta1VMAgentSpecTolerationsItems0], default is Undefined, optional
        Tolerations If specified, the pod's tolerations.
    topologySpreadConstraints : [any], default is Undefined, optional
        TopologySpreadConstraints embedded kubernetes pod configuration option, controls how pods are spread across your cluster among failure-domains such as regions, zones, nodes, and other user-defined topology domains https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
    updateStrategy : str, default is Undefined, optional
        UpdateStrategy - overrides default update strategy. works only for deployments, statefulset always use OnDelete.
    vmAgentExternalLabelName : str, default is Undefined, optional
        VMAgentExternalLabelName Name of vmAgent external label used to denote vmAgent instance name. Defaults to the value of `prometheus`. External label will _not_ be added when value is set to empty string (`""`).
    volumeMounts : [OperatorVictoriametricsComV1beta1VMAgentSpecVolumeMountsItems0], default is Undefined, optional
        VolumeMounts allows configuration of additional VolumeMounts on the output deploy definition. VolumeMounts specified will be appended to other VolumeMounts in the vmagent container, that are generated as a result of StorageSpec objects.
    volumes : [any], default is Undefined, optional
        Volumes allows configuration of additional volumes on the output deploy definition. Volumes specified will be appended to other volumes that are generated as a result of StorageSpec objects.
    aPIServerConfig : OperatorVictoriametricsComV1beta1VMAgentSpecAPIServerConfig, default is Undefined, optional
        a p i server config
    additionalScrapeConfigs : OperatorVictoriametricsComV1beta1VMAgentSpecAdditionalScrapeConfigs, default is Undefined, optional
        additional scrape configs
    arbitraryFSAccessThroughSMs : OperatorVictoriametricsComV1beta1VMAgentSpecArbitraryFSAccessThroughSMs, default is Undefined, optional
        arbitrary f s access through s ms
    dnsConfig : OperatorVictoriametricsComV1beta1VMAgentSpecDNSConfig, default is Undefined, optional
        dns config
    image : OperatorVictoriametricsComV1beta1VMAgentSpecImage, default is Undefined, optional
        image
    insertPorts : OperatorVictoriametricsComV1beta1VMAgentSpecInsertPorts, default is Undefined, optional
        insert ports
    nodeScrapeNamespaceSelector : OperatorVictoriametricsComV1beta1VMAgentSpecNodeScrapeNamespaceSelector, default is Undefined, optional
        node scrape namespace selector
    nodeScrapeSelector : OperatorVictoriametricsComV1beta1VMAgentSpecNodeScrapeSelector, default is Undefined, optional
        node scrape selector
    podDisruptionBudget : OperatorVictoriametricsComV1beta1VMAgentSpecPodDisruptionBudget, default is Undefined, optional
        pod disruption budget
    podMetadata : OperatorVictoriametricsComV1beta1VMAgentSpecPodMetadata, default is Undefined, optional
        pod metadata
    podScrapeNamespaceSelector : OperatorVictoriametricsComV1beta1VMAgentSpecPodScrapeNamespaceSelector, default is Undefined, optional
        pod scrape namespace selector
    podScrapeSelector : OperatorVictoriametricsComV1beta1VMAgentSpecPodScrapeSelector, default is Undefined, optional
        pod scrape selector
    probeNamespaceSelector : OperatorVictoriametricsComV1beta1VMAgentSpecProbeNamespaceSelector, default is Undefined, optional
        probe namespace selector
    probeSelector : OperatorVictoriametricsComV1beta1VMAgentSpecProbeSelector, default is Undefined, optional
        probe selector
    relabelConfig : OperatorVictoriametricsComV1beta1VMAgentSpecRelabelConfig, default is Undefined, optional
        relabel config
    remoteWriteSettings : OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteSettings, default is Undefined, optional
        remote write settings
    resources : OperatorVictoriametricsComV1beta1VMAgentSpecResources, default is Undefined, optional
        resources
    rollingUpdate : OperatorVictoriametricsComV1beta1VMAgentSpecRollingUpdate, default is Undefined, optional
        rolling update
    serviceScrapeNamespaceSelector : OperatorVictoriametricsComV1beta1VMAgentSpecServiceScrapeNamespaceSelector, default is Undefined, optional
        service scrape namespace selector
    serviceScrapeSelector : OperatorVictoriametricsComV1beta1VMAgentSpecServiceScrapeSelector, default is Undefined, optional
        service scrape selector
    serviceSpec : OperatorVictoriametricsComV1beta1VMAgentSpecServiceSpec, default is Undefined, optional
        service spec
    statefulStorage : OperatorVictoriametricsComV1beta1VMAgentSpecStatefulStorage, default is Undefined, optional
        stateful storage
    staticScrapeNamespaceSelector : OperatorVictoriametricsComV1beta1VMAgentSpecStaticScrapeNamespaceSelector, default is Undefined, optional
        static scrape namespace selector
    staticScrapeSelector : OperatorVictoriametricsComV1beta1VMAgentSpecStaticScrapeSelector, default is Undefined, optional
        static scrape selector
    """


    _?: str

    affinity?: any

    claimTemplates?: [OperatorVictoriametricsComV1beta1VMAgentSpecClaimTemplatesItems0]

    configMaps?: [str]

    containers?: [any]

    dnsPolicy?: str

    enforcedNamespaceLabel?: str

    externalLabels?: {str:str}

    extraArgs?: {str:str}

    extraEnvs?: [OperatorVictoriametricsComV1beta1VMAgentSpecExtraEnvsItems0]

    hostNetwork?: bool

    host_aliases?: [OperatorVictoriametricsComV1beta1VMAgentSpecHostAliasesItems0]

    ignoreNamespaceSelectors?: bool

    imagePullSecrets?: [OperatorVictoriametricsComV1beta1VMAgentSpecImagePullSecretsItems0]

    initContainers?: [any]

    inlineRelabelConfig?: [OperatorVictoriametricsComV1beta1VMAgentSpecInlineRelabelConfigItems0]

    inlineScrapeConfig?: str

    livenessProbe?: any

    logFormat?: "default" | "json"

    logLevel?: "INFO" | "WARN" | "ERROR" | "FATAL" | "PANIC"

    maxScrapeInterval?: str

    minScrapeInterval?: str

    nodeScrapeRelabelTemplate?: [OperatorVictoriametricsComV1beta1VMAgentSpecNodeScrapeRelabelTemplateItems0]

    nodeSelector?: {str:str}

    overrideHonorLabels?: bool

    overrideHonorTimestamps?: bool

    podScrapeRelabelTemplate?: [OperatorVictoriametricsComV1beta1VMAgentSpecPodScrapeRelabelTemplateItems0]

    podSecurityPolicyName?: str

    port?: str

    priorityClassName?: str

    probeScrapeRelabelTemplate?: [OperatorVictoriametricsComV1beta1VMAgentSpecProbeScrapeRelabelTemplateItems0]

    readinessGates?: [OperatorVictoriametricsComV1beta1VMAgentSpecReadinessGatesItems0]

    readinessProbe?: any

    remoteWrite?: [OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0]

    replicaCount?: int

    runtimeClassName?: str

    schedulerName?: str

    scrapeInterval?: str

    scrapeTimeout?: str

    secrets?: [str]

    securityContext?: any

    selectAllByDefault?: bool

    serviceAccountName?: str

    serviceScrapeRelabelTemplate?: [OperatorVictoriametricsComV1beta1VMAgentSpecServiceScrapeRelabelTemplateItems0]

    serviceScrapeSpec?: any

    shardCount?: int

    startupProbe?: any

    statefulMode?: bool

    statefulRollingUpdateStrategy?: str

    staticScrapeRelabelTemplate?: [OperatorVictoriametricsComV1beta1VMAgentSpecStaticScrapeRelabelTemplateItems0]

    terminationGracePeriodSeconds?: int

    tolerations?: [OperatorVictoriametricsComV1beta1VMAgentSpecTolerationsItems0]

    topologySpreadConstraints?: [any]

    updateStrategy?: "Recreate" | "RollingUpdate"

    vmAgentExternalLabelName?: str

    volumeMounts?: [OperatorVictoriametricsComV1beta1VMAgentSpecVolumeMountsItems0]

    volumes?: [any]

    aPIServerConfig?: OperatorVictoriametricsComV1beta1VMAgentSpecAPIServerConfig

    additionalScrapeConfigs?: OperatorVictoriametricsComV1beta1VMAgentSpecAdditionalScrapeConfigs

    arbitraryFSAccessThroughSMs?: OperatorVictoriametricsComV1beta1VMAgentSpecArbitraryFSAccessThroughSMs

    dnsConfig?: OperatorVictoriametricsComV1beta1VMAgentSpecDNSConfig

    image?: OperatorVictoriametricsComV1beta1VMAgentSpecImage

    insertPorts?: OperatorVictoriametricsComV1beta1VMAgentSpecInsertPorts

    nodeScrapeNamespaceSelector?: OperatorVictoriametricsComV1beta1VMAgentSpecNodeScrapeNamespaceSelector

    nodeScrapeSelector?: OperatorVictoriametricsComV1beta1VMAgentSpecNodeScrapeSelector

    podDisruptionBudget?: OperatorVictoriametricsComV1beta1VMAgentSpecPodDisruptionBudget

    podMetadata?: OperatorVictoriametricsComV1beta1VMAgentSpecPodMetadata

    podScrapeNamespaceSelector?: OperatorVictoriametricsComV1beta1VMAgentSpecPodScrapeNamespaceSelector

    podScrapeSelector?: OperatorVictoriametricsComV1beta1VMAgentSpecPodScrapeSelector

    probeNamespaceSelector?: OperatorVictoriametricsComV1beta1VMAgentSpecProbeNamespaceSelector

    probeSelector?: OperatorVictoriametricsComV1beta1VMAgentSpecProbeSelector

    relabelConfig?: OperatorVictoriametricsComV1beta1VMAgentSpecRelabelConfig

    remoteWriteSettings?: OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteSettings

    resources?: OperatorVictoriametricsComV1beta1VMAgentSpecResources

    rollingUpdate?: OperatorVictoriametricsComV1beta1VMAgentSpecRollingUpdate

    serviceScrapeNamespaceSelector?: OperatorVictoriametricsComV1beta1VMAgentSpecServiceScrapeNamespaceSelector

    serviceScrapeSelector?: OperatorVictoriametricsComV1beta1VMAgentSpecServiceScrapeSelector

    serviceSpec?: OperatorVictoriametricsComV1beta1VMAgentSpecServiceSpec

    statefulStorage?: OperatorVictoriametricsComV1beta1VMAgentSpecStatefulStorage

    staticScrapeNamespaceSelector?: OperatorVictoriametricsComV1beta1VMAgentSpecStaticScrapeNamespaceSelector

    staticScrapeSelector?: OperatorVictoriametricsComV1beta1VMAgentSpecStaticScrapeSelector


    check:
        regex.match(str(scrapeInterval), r"[0-9]+(ms|s|m|h)") if scrapeInterval
        regex.match(str(scrapeTimeout), r"[0-9]+(ms|s|m|h)") if scrapeTimeout


schema OperatorVictoriametricsComV1beta1VMAgentSpecAPIServerConfig:
    """
    APIServerConfig allows specifying a host and auth methods to access apiserver. If left empty, VMAgent is assumed to run inside of the cluster and will discover API servers automatically and use the pod's CA certificate and bearer token file at /var/run/secrets/kubernetes.io/serviceaccount/.

    Attributes
    ----------
    bearerToken : str, default is Undefined, optional
        Bearer token for accessing apiserver.
    bearerTokenFile : str, default is Undefined, optional
        File to read bearer token for accessing apiserver.
    host : str, default is Undefined, required
        Host of apiserver. A valid string consisting of a hostname or IP followed by an optional port number
    authorization : OperatorVictoriametricsComV1beta1VMAgentSpecAPIServerConfigAuthorization, default is Undefined, optional
        authorization
    basicAuth : OperatorVictoriametricsComV1beta1VMAgentSpecAPIServerConfigBasicAuth, default is Undefined, optional
        basic auth
    tlsConfig : OperatorVictoriametricsComV1beta1VMAgentSpecAPIServerConfigTLSConfig, default is Undefined, optional
        tls config
    """


    bearerToken?: str

    bearerTokenFile?: str

    host: str

    authorization?: OperatorVictoriametricsComV1beta1VMAgentSpecAPIServerConfigAuthorization

    basicAuth?: OperatorVictoriametricsComV1beta1VMAgentSpecAPIServerConfigBasicAuth

    tlsConfig?: OperatorVictoriametricsComV1beta1VMAgentSpecAPIServerConfigTLSConfig


schema OperatorVictoriametricsComV1beta1VMAgentSpecAPIServerConfigAuthorization:
    """
    Authorization configures generic authorization params

    Attributes
    ----------
    credentialsFile : str, default is Undefined, optional
        File with value for authorization
    $type : str, default is Undefined, optional
        Type of authorization, default to bearer
    credentials : OperatorVictoriametricsComV1beta1VMAgentSpecAPIServerConfigAuthorizationCredentials, default is Undefined, optional
        credentials
    """


    credentialsFile?: str

    $type?: str

    credentials?: OperatorVictoriametricsComV1beta1VMAgentSpecAPIServerConfigAuthorizationCredentials


schema OperatorVictoriametricsComV1beta1VMAgentSpecAPIServerConfigAuthorizationCredentials:
    """
    Reference to the secret with value for authorization

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAgentSpecAPIServerConfigBasicAuth:
    """
    BasicAuth allow an endpoint to authenticate over basic authentication

    Attributes
    ----------
    password_file : str, default is Undefined, optional
        PasswordFile defines path to password file at disk
    password : OperatorVictoriametricsComV1beta1VMAgentSpecAPIServerConfigBasicAuthPassword, default is Undefined, optional
        password
    username : OperatorVictoriametricsComV1beta1VMAgentSpecAPIServerConfigBasicAuthUsername, default is Undefined, optional
        username
    """


    password_file?: str

    password?: OperatorVictoriametricsComV1beta1VMAgentSpecAPIServerConfigBasicAuthPassword

    username?: OperatorVictoriametricsComV1beta1VMAgentSpecAPIServerConfigBasicAuthUsername


schema OperatorVictoriametricsComV1beta1VMAgentSpecAPIServerConfigBasicAuthPassword:
    """
    The secret in the service scrape namespace that contains the password for authentication. It must be at them same namespace as CRD

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAgentSpecAPIServerConfigBasicAuthUsername:
    """
    The secret in the service scrape namespace that contains the username for authentication. It must be at them same namespace as CRD

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAgentSpecAPIServerConfigTLSConfig:
    """
    TLSConfig Config to use for accessing apiserver.

    Attributes
    ----------
    caFile : str, default is Undefined, optional
        Path to the CA cert in the container to use for the targets.
    certFile : str, default is Undefined, optional
        Path to the client cert file in the container for the targets.
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keyFile : str, default is Undefined, optional
        Path to the client key file in the container for the targets.
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    ca : OperatorVictoriametricsComV1beta1VMAgentSpecAPIServerConfigTLSConfigCa, default is Undefined, optional
        ca
    cert : OperatorVictoriametricsComV1beta1VMAgentSpecAPIServerConfigTLSConfigCert, default is Undefined, optional
        cert
    keySecret : OperatorVictoriametricsComV1beta1VMAgentSpecAPIServerConfigTLSConfigKeySecret, default is Undefined, optional
        key secret
    """


    caFile?: str

    certFile?: str

    insecureSkipVerify?: bool

    keyFile?: str

    serverName?: str

    ca?: OperatorVictoriametricsComV1beta1VMAgentSpecAPIServerConfigTLSConfigCa

    cert?: OperatorVictoriametricsComV1beta1VMAgentSpecAPIServerConfigTLSConfigCert

    keySecret?: OperatorVictoriametricsComV1beta1VMAgentSpecAPIServerConfigTLSConfigKeySecret


schema OperatorVictoriametricsComV1beta1VMAgentSpecAPIServerConfigTLSConfigCa:
    """
    Stuct containing the CA cert to use for the targets.

    Attributes
    ----------
    configMap : OperatorVictoriametricsComV1beta1VMAgentSpecAPIServerConfigTLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : OperatorVictoriametricsComV1beta1VMAgentSpecAPIServerConfigTLSConfigCaSecret, default is Undefined, optional
        secret
    """


    configMap?: OperatorVictoriametricsComV1beta1VMAgentSpecAPIServerConfigTLSConfigCaConfigMap

    secret?: OperatorVictoriametricsComV1beta1VMAgentSpecAPIServerConfigTLSConfigCaSecret


schema OperatorVictoriametricsComV1beta1VMAgentSpecAPIServerConfigTLSConfigCaConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAgentSpecAPIServerConfigTLSConfigCaSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAgentSpecAPIServerConfigTLSConfigCert:
    """
    Struct containing the client cert file for the targets.

    Attributes
    ----------
    configMap : OperatorVictoriametricsComV1beta1VMAgentSpecAPIServerConfigTLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : OperatorVictoriametricsComV1beta1VMAgentSpecAPIServerConfigTLSConfigCertSecret, default is Undefined, optional
        secret
    """


    configMap?: OperatorVictoriametricsComV1beta1VMAgentSpecAPIServerConfigTLSConfigCertConfigMap

    secret?: OperatorVictoriametricsComV1beta1VMAgentSpecAPIServerConfigTLSConfigCertSecret


schema OperatorVictoriametricsComV1beta1VMAgentSpecAPIServerConfigTLSConfigCertConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAgentSpecAPIServerConfigTLSConfigCertSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAgentSpecAPIServerConfigTLSConfigKeySecret:
    """
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAgentSpecAdditionalScrapeConfigs:
    """
    AdditionalScrapeConfigs As scrape configs are appended, the user is responsible to make sure it is valid. Note that using this feature may expose the possibility to break upgrades of VMAgent. It is advised to review VMAgent release notes to ensure that no incompatible scrape configs are going to break VMAgent after the upgrade.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAgentSpecArbitraryFSAccessThroughSMs:
    """
    ArbitraryFSAccessThroughSMs configures whether configuration based on a service scrape can access arbitrary files on the file system of the VMAgent container e.g. bearer token files.

    Attributes
    ----------
    deny : bool, default is Undefined, optional
        deny
    """


    deny?: bool


schema OperatorVictoriametricsComV1beta1VMAgentSpecClaimTemplatesItems0:
    """
    PersistentVolumeClaim is a user's request for and claim to a persistent volume

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is Undefined, optional
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : any, default is Undefined, optional
        Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
    spec : OperatorVictoriametricsComV1beta1VMAgentSpecClaimTemplatesItems0Spec, default is Undefined, optional
        spec
    status : OperatorVictoriametricsComV1beta1VMAgentSpecClaimTemplatesItems0Status, default is Undefined, optional
        status
    """


    apiVersion?: str

    kind?: str

    metadata?: any

    spec?: OperatorVictoriametricsComV1beta1VMAgentSpecClaimTemplatesItems0Spec

    status?: OperatorVictoriametricsComV1beta1VMAgentSpecClaimTemplatesItems0Status


schema OperatorVictoriametricsComV1beta1VMAgentSpecClaimTemplatesItems0Spec:
    """
    spec defines the desired characteristics of a volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims

    Attributes
    ----------
    accessModes : [str], default is Undefined, optional
        accessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
    dataSource : OperatorVictoriametricsComV1beta1VMAgentSpecClaimTemplatesItems0SpecDataSource, default is Undefined, optional
        data source
    dataSourceRef : OperatorVictoriametricsComV1beta1VMAgentSpecClaimTemplatesItems0SpecDataSourceRef, default is Undefined, optional
        data source ref
    resources : OperatorVictoriametricsComV1beta1VMAgentSpecClaimTemplatesItems0SpecResources, default is Undefined, optional
        resources
    selector : OperatorVictoriametricsComV1beta1VMAgentSpecClaimTemplatesItems0SpecSelector, default is Undefined, optional
        selector
    storageClassName : str, default is Undefined, optional
        storageClassName is the name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
    volumeMode : str, default is Undefined, optional
        volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
    volumeName : str, default is Undefined, optional
        volumeName is the binding reference to the PersistentVolume backing this claim.
    """


    accessModes?: [str]

    dataSource?: OperatorVictoriametricsComV1beta1VMAgentSpecClaimTemplatesItems0SpecDataSource

    dataSourceRef?: OperatorVictoriametricsComV1beta1VMAgentSpecClaimTemplatesItems0SpecDataSourceRef

    resources?: OperatorVictoriametricsComV1beta1VMAgentSpecClaimTemplatesItems0SpecResources

    selector?: OperatorVictoriametricsComV1beta1VMAgentSpecClaimTemplatesItems0SpecSelector

    storageClassName?: str

    volumeMode?: str

    volumeName?: str


schema OperatorVictoriametricsComV1beta1VMAgentSpecClaimTemplatesItems0SpecDataSource:
    """
    dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
    kind : str, default is Undefined, required
        Kind is the type of resource being referenced
    name : str, default is Undefined, required
        Name is the name of resource being referenced
    """


    apiGroup?: str

    kind: str

    name: str


schema OperatorVictoriametricsComV1beta1VMAgentSpecClaimTemplatesItems0SpecDataSourceRef:
    """
    dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
    kind : str, default is Undefined, required
        Kind is the type of resource being referenced
    name : str, default is Undefined, required
        Name is the name of resource being referenced
    """


    apiGroup?: str

    kind: str

    name: str


schema OperatorVictoriametricsComV1beta1VMAgentSpecClaimTemplatesItems0SpecResources:
    """
    resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources

    Attributes
    ----------
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, limits in limits {regex.match(str(limits), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if limits } if limits
        all _, requests in requests {regex.match(str(requests), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if requests } if requests


schema OperatorVictoriametricsComV1beta1VMAgentSpecClaimTemplatesItems0SpecSelector:
    """
    selector is a label query over volumes to consider for binding.

    Attributes
    ----------
    matchExpressions : [OperatorVictoriametricsComV1beta1VMAgentSpecClaimTemplatesItems0SpecSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [OperatorVictoriametricsComV1beta1VMAgentSpecClaimTemplatesItems0SpecSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OperatorVictoriametricsComV1beta1VMAgentSpecClaimTemplatesItems0SpecSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema OperatorVictoriametricsComV1beta1VMAgentSpecClaimTemplatesItems0Status:
    """
    status represents the current information/status of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims

    Attributes
    ----------
    accessModes : [str], default is Undefined, optional
        accessModes contains the actual access modes the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
    allocatedResources : {str:int | str}, default is Undefined, optional
        allocatedResources is the storage resource within AllocatedResources tracks the capacity allocated to a PVC. It may be larger than the actual capacity when a volume expansion operation is requested. For storage quota, the larger value from allocatedResources and PVC.spec.resources is used. If allocatedResources is not set, PVC.spec.resources alone is used for quota calculation. If a volume expansion capacity request is lowered, allocatedResources is only lowered if there are no expansion operations in progress and if the actual volume capacity is equal or lower than the requested capacity. This is an alpha field and requires enabling RecoverVolumeExpansionFailure feature.
    capacity : {str:int | str}, default is Undefined, optional
        capacity represents the actual resources of the underlying volume.
    conditions : [OperatorVictoriametricsComV1beta1VMAgentSpecClaimTemplatesItems0StatusConditionsItems0], default is Undefined, optional
        conditions is the current Condition of persistent volume claim. If underlying persistent volume is being resized then the Condition will be set to 'ResizeStarted'.
    phase : str, default is Undefined, optional
        phase represents the current phase of PersistentVolumeClaim.
    resizeStatus : str, default is Undefined, optional
        resizeStatus stores status of resize operation. ResizeStatus is not set by default but when expansion is complete resizeStatus is set to empty string by resize controller or kubelet. This is an alpha field and requires enabling RecoverVolumeExpansionFailure feature.
    """


    accessModes?: [str]

    allocatedResources?: {str:int | str}

    capacity?: {str:int | str}

    conditions?: [OperatorVictoriametricsComV1beta1VMAgentSpecClaimTemplatesItems0StatusConditionsItems0]

    phase?: str

    resizeStatus?: str


    check:
        all _, allocatedResources in allocatedResources {regex.match(str(allocatedResources), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if allocatedResources } if allocatedResources
        all _, capacity in capacity {regex.match(str(capacity), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if capacity } if capacity


schema OperatorVictoriametricsComV1beta1VMAgentSpecClaimTemplatesItems0StatusConditionsItems0:
    """
    PersistentVolumeClaimCondition contails details about state of pvc

    Attributes
    ----------
    lastProbeTime : str, default is Undefined, optional
        lastProbeTime is the time we probed the condition.
    lastTransitionTime : str, default is Undefined, optional
        lastTransitionTime is the time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        message is the human-readable message indicating details about last transition.
    reason : str, default is Undefined, optional
        reason is a unique, this should be a short, machine understandable string that gives the reason for condition's last transition. If it reports "ResizeStarted" that means the underlying persistent volume is being resized.
    status : str, default is Undefined, required
        status
    $type : str, default is Undefined, required
        PersistentVolumeClaimConditionType is a valid value of PersistentVolumeClaimCondition.Type
    """


    lastProbeTime?: str

    lastTransitionTime?: str

    message?: str

    reason?: str

    status: str

    $type: str


schema [any]:
    """
    Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.

    Attributes
    ----------
    nameservers : [str], default is Undefined, optional
        A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.
    options : [OperatorVictoriametricsComV1beta1VMAgentSpecDNSConfigOptionsItems0], default is Undefined, optional
        A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.
    searches : [str], default is Undefined, optional
        A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.
    """


    nameservers?: [str]

    options?: [OperatorVictoriametricsComV1beta1VMAgentSpecDNSConfigOptionsItems0]

    searches?: [str]


schema OperatorVictoriametricsComV1beta1VMAgentSpecDNSConfigOptionsItems0:
    """
    PodDNSConfigOption defines DNS resolver options of a pod.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Required.
    value : str, default is Undefined, optional
        value
    """


    name?: str

    value?: str


schema OperatorVictoriametricsComV1beta1VMAgentSpecExtraEnvsItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
    """


    name: str

    value?: str


schema OperatorVictoriametricsComV1beta1VMAgentSpecHostAliasesItems0:
    """
    HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file.

    Attributes
    ----------
    hostnames : [str], default is Undefined, optional
        Hostnames for the above IP address.
    ip : str, default is Undefined, optional
        IP address of the host file entry.
    """


    hostnames?: [str]

    ip?: str


schema OperatorVictoriametricsComV1beta1VMAgentSpecImage:
    """
    Image - docker image settings for VMAgent if no specified operator uses default config version

    Attributes
    ----------
    pullPolicy : str, default is Undefined, optional
        PullPolicy describes how to pull docker image
    repository : str, default is Undefined, optional
        Repository contains name of docker image + it's repository if needed
    tag : str, default is Undefined, optional
        Tag contains desired docker image version
    """


    pullPolicy?: str

    repository?: str

    tag?: str


schema OperatorVictoriametricsComV1beta1VMAgentSpecImagePullSecretsItems0:
    """
    LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema OperatorVictoriametricsComV1beta1VMAgentSpecInlineRelabelConfigItems0:
    """
    RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion. It defines `<metric_relabel_configs>`-section of configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs

    Attributes
    ----------
    action : str, default is Undefined, optional
        Action to perform based on regex matching. Default is 'replace'
    $if : any, default is Undefined, optional
        If represents metricsQL match expression (or list of expressions): '{__name__=~"foo_.*"}'
    labels : {str:str}, default is Undefined, optional
        Labels is used together with Match for `action: graphite`
    match : str, default is Undefined, optional
        Match is used together with Labels for `action: graphite`
    modulus : int, default is Undefined, optional
        Modulus to take of the hash of the source label values.
    regex : str, default is Undefined, optional
        Regular expression against which the extracted value is matched. Default is '(.*)'
    replacement : str, default is Undefined, optional
        Replacement value against which a regex replace is performed if the regular expression matches. Regex capture groups are available. Default is '$1'
    separator : str, default is Undefined, optional
        Separator placed between concatenated source label values. default is ';'.
    sourceLabels : [str], default is Undefined, optional
        The source labels select values from existing labels. Their content is concatenated using the configured separator and matched against the configured regular expression for the replace, keep, and drop actions.
    source_labels : [str], default is Undefined, optional
        UnderScoreSourceLabels - additional form of source labels source_labels for compatibility with original relabel config. if set  both sourceLabels and source_labels, sourceLabels has priority. for details https://github.com/VictoriaMetrics/operator/issues/131
    targetLabel : str, default is Undefined, optional
        Label to which the resulting value is written in a replace action. It is mandatory for replace actions. Regex capture groups are available.
    target_label : str, default is Undefined, optional
        UnderScoreTargetLabel - additional form of target label - target_label for compatibility with original relabel config. if set  both targetLabel and target_label, targetLabel has priority. for details https://github.com/VictoriaMetrics/operator/issues/131
    """


    action?: str

    $if?: any

    labels?: {str:str}

    match?: str

    modulus?: int

    regex?: str

    replacement?: str

    separator?: str

    sourceLabels?: [str]

    source_labels?: [str]

    targetLabel?: str

    target_label?: str


schema OperatorVictoriametricsComV1beta1VMAgentSpecInsertPorts:
    """
    InsertPorts - additional listen ports for data ingestion.

    Attributes
    ----------
    graphitePort : str, default is Undefined, optional
        GraphitePort listen port
    influxPort : str, default is Undefined, optional
        InfluxPort listen port
    openTSDBHTTPPort : str, default is Undefined, optional
        OpenTSDBHTTPPort for http connections.
    openTSDBPort : str, default is Undefined, optional
        OpenTSDBPort for tcp and udp listen
    """


    graphitePort?: str

    influxPort?: str

    openTSDBHTTPPort?: str

    openTSDBPort?: str


schema OperatorVictoriametricsComV1beta1VMAgentSpecNodeScrapeNamespaceSelector:
    """
    NodeScrapeNamespaceSelector defines Namespaces to be selected for VMNodeScrape discovery. Works in combination with Selector. NamespaceSelector nil - only objects at VMAgent namespace. Selector nil - only objects at NamespaceSelector namespaces. If both nil - behaviour controlled by selectAllByDefault

    Attributes
    ----------
    matchExpressions : [OperatorVictoriametricsComV1beta1VMAgentSpecNodeScrapeNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [OperatorVictoriametricsComV1beta1VMAgentSpecNodeScrapeNamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OperatorVictoriametricsComV1beta1VMAgentSpecNodeScrapeNamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema OperatorVictoriametricsComV1beta1VMAgentSpecNodeScrapeRelabelTemplateItems0:
    """
    RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion. It defines `<metric_relabel_configs>`-section of configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs

    Attributes
    ----------
    action : str, default is Undefined, optional
        Action to perform based on regex matching. Default is 'replace'
    $if : any, default is Undefined, optional
        If represents metricsQL match expression (or list of expressions): '{__name__=~"foo_.*"}'
    labels : {str:str}, default is Undefined, optional
        Labels is used together with Match for `action: graphite`
    match : str, default is Undefined, optional
        Match is used together with Labels for `action: graphite`
    modulus : int, default is Undefined, optional
        Modulus to take of the hash of the source label values.
    regex : str, default is Undefined, optional
        Regular expression against which the extracted value is matched. Default is '(.*)'
    replacement : str, default is Undefined, optional
        Replacement value against which a regex replace is performed if the regular expression matches. Regex capture groups are available. Default is '$1'
    separator : str, default is Undefined, optional
        Separator placed between concatenated source label values. default is ';'.
    sourceLabels : [str], default is Undefined, optional
        The source labels select values from existing labels. Their content is concatenated using the configured separator and matched against the configured regular expression for the replace, keep, and drop actions.
    source_labels : [str], default is Undefined, optional
        UnderScoreSourceLabels - additional form of source labels source_labels for compatibility with original relabel config. if set  both sourceLabels and source_labels, sourceLabels has priority. for details https://github.com/VictoriaMetrics/operator/issues/131
    targetLabel : str, default is Undefined, optional
        Label to which the resulting value is written in a replace action. It is mandatory for replace actions. Regex capture groups are available.
    target_label : str, default is Undefined, optional
        UnderScoreTargetLabel - additional form of target label - target_label for compatibility with original relabel config. if set  both targetLabel and target_label, targetLabel has priority. for details https://github.com/VictoriaMetrics/operator/issues/131
    """


    action?: str

    $if?: any

    labels?: {str:str}

    match?: str

    modulus?: int

    regex?: str

    replacement?: str

    separator?: str

    sourceLabels?: [str]

    source_labels?: [str]

    targetLabel?: str

    target_label?: str


schema OperatorVictoriametricsComV1beta1VMAgentSpecNodeScrapeSelector:
    """
    NodeScrapeSelector defines VMNodeScrape to be selected for scraping. Works in combination with NamespaceSelector. NamespaceSelector nil - only objects at VMAgent namespace. Selector nil - only objects at NamespaceSelector namespaces. If both nil - behaviour controlled by selectAllByDefault

    Attributes
    ----------
    matchExpressions : [OperatorVictoriametricsComV1beta1VMAgentSpecNodeScrapeSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [OperatorVictoriametricsComV1beta1VMAgentSpecNodeScrapeSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OperatorVictoriametricsComV1beta1VMAgentSpecNodeScrapeSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema OperatorVictoriametricsComV1beta1VMAgentSpecPodDisruptionBudget:
    """
    PodDisruptionBudget created by operator

    Attributes
    ----------
    maxUnavailable : int | str, default is Undefined, optional
        An eviction is allowed if at most "maxUnavailable" pods selected by "selector" are unavailable after the eviction, i.e. even in absence of the evicted pod. For example, one can prevent all voluntary evictions by specifying 0. This is a mutually exclusive setting with "minAvailable".
    minAvailable : int | str, default is Undefined, optional
        An eviction is allowed if at least "minAvailable" pods selected by "selector" will still be available after the eviction, i.e. even in the absence of the evicted pod.  So for example you can prevent all voluntary evictions by specifying "100%".
    selectorLabels : {str:str}, default is Undefined, optional
        replaces default labels selector generated by operator it's useful when you need to create custom budget
    """


    maxUnavailable?: int | str

    minAvailable?: int | str

    selectorLabels?: {str:str}


schema OperatorVictoriametricsComV1beta1VMAgentSpecPodMetadata:
    """
    PodMetadata configures Labels and Annotations which are propagated to the vmagent pods.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
    labels : {str:str}, default is Undefined, optional
        Labels Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
    name : str, default is Undefined, optional
        Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names
    """


    annotations?: {str:str}

    labels?: {str:str}

    name?: str


schema OperatorVictoriametricsComV1beta1VMAgentSpecPodScrapeNamespaceSelector:
    """
    PodScrapeNamespaceSelector defines Namespaces to be selected for VMPodScrape discovery. Works in combination with Selector. NamespaceSelector nil - only objects at VMAgent namespace. Selector nil - only objects at NamespaceSelector namespaces. If both nil - behaviour controlled by selectAllByDefault

    Attributes
    ----------
    matchExpressions : [OperatorVictoriametricsComV1beta1VMAgentSpecPodScrapeNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [OperatorVictoriametricsComV1beta1VMAgentSpecPodScrapeNamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OperatorVictoriametricsComV1beta1VMAgentSpecPodScrapeNamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema OperatorVictoriametricsComV1beta1VMAgentSpecPodScrapeRelabelTemplateItems0:
    """
    RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion. It defines `<metric_relabel_configs>`-section of configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs

    Attributes
    ----------
    action : str, default is Undefined, optional
        Action to perform based on regex matching. Default is 'replace'
    $if : any, default is Undefined, optional
        If represents metricsQL match expression (or list of expressions): '{__name__=~"foo_.*"}'
    labels : {str:str}, default is Undefined, optional
        Labels is used together with Match for `action: graphite`
    match : str, default is Undefined, optional
        Match is used together with Labels for `action: graphite`
    modulus : int, default is Undefined, optional
        Modulus to take of the hash of the source label values.
    regex : str, default is Undefined, optional
        Regular expression against which the extracted value is matched. Default is '(.*)'
    replacement : str, default is Undefined, optional
        Replacement value against which a regex replace is performed if the regular expression matches. Regex capture groups are available. Default is '$1'
    separator : str, default is Undefined, optional
        Separator placed between concatenated source label values. default is ';'.
    sourceLabels : [str], default is Undefined, optional
        The source labels select values from existing labels. Their content is concatenated using the configured separator and matched against the configured regular expression for the replace, keep, and drop actions.
    source_labels : [str], default is Undefined, optional
        UnderScoreSourceLabels - additional form of source labels source_labels for compatibility with original relabel config. if set  both sourceLabels and source_labels, sourceLabels has priority. for details https://github.com/VictoriaMetrics/operator/issues/131
    targetLabel : str, default is Undefined, optional
        Label to which the resulting value is written in a replace action. It is mandatory for replace actions. Regex capture groups are available.
    target_label : str, default is Undefined, optional
        UnderScoreTargetLabel - additional form of target label - target_label for compatibility with original relabel config. if set  both targetLabel and target_label, targetLabel has priority. for details https://github.com/VictoriaMetrics/operator/issues/131
    """


    action?: str

    $if?: any

    labels?: {str:str}

    match?: str

    modulus?: int

    regex?: str

    replacement?: str

    separator?: str

    sourceLabels?: [str]

    source_labels?: [str]

    targetLabel?: str

    target_label?: str


schema OperatorVictoriametricsComV1beta1VMAgentSpecPodScrapeSelector:
    """
    PodScrapeSelector defines PodScrapes to be selected for target discovery. Works in combination with NamespaceSelector. NamespaceSelector nil - only objects at VMAgent namespace. Selector nil - only objects at NamespaceSelector namespaces. If both nil - behaviour controlled by selectAllByDefault

    Attributes
    ----------
    matchExpressions : [OperatorVictoriametricsComV1beta1VMAgentSpecPodScrapeSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [OperatorVictoriametricsComV1beta1VMAgentSpecPodScrapeSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OperatorVictoriametricsComV1beta1VMAgentSpecPodScrapeSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema OperatorVictoriametricsComV1beta1VMAgentSpecProbeNamespaceSelector:
    """
    ProbeNamespaceSelector defines Namespaces to be selected for VMProbe discovery. Works in combination with Selector. NamespaceSelector nil - only objects at VMAgent namespace. Selector nil - only objects at NamespaceSelector namespaces. If both nil - behaviour controlled by selectAllByDefault

    Attributes
    ----------
    matchExpressions : [OperatorVictoriametricsComV1beta1VMAgentSpecProbeNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [OperatorVictoriametricsComV1beta1VMAgentSpecProbeNamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OperatorVictoriametricsComV1beta1VMAgentSpecProbeNamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema OperatorVictoriametricsComV1beta1VMAgentSpecProbeScrapeRelabelTemplateItems0:
    """
    RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion. It defines `<metric_relabel_configs>`-section of configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs

    Attributes
    ----------
    action : str, default is Undefined, optional
        Action to perform based on regex matching. Default is 'replace'
    $if : any, default is Undefined, optional
        If represents metricsQL match expression (or list of expressions): '{__name__=~"foo_.*"}'
    labels : {str:str}, default is Undefined, optional
        Labels is used together with Match for `action: graphite`
    match : str, default is Undefined, optional
        Match is used together with Labels for `action: graphite`
    modulus : int, default is Undefined, optional
        Modulus to take of the hash of the source label values.
    regex : str, default is Undefined, optional
        Regular expression against which the extracted value is matched. Default is '(.*)'
    replacement : str, default is Undefined, optional
        Replacement value against which a regex replace is performed if the regular expression matches. Regex capture groups are available. Default is '$1'
    separator : str, default is Undefined, optional
        Separator placed between concatenated source label values. default is ';'.
    sourceLabels : [str], default is Undefined, optional
        The source labels select values from existing labels. Their content is concatenated using the configured separator and matched against the configured regular expression for the replace, keep, and drop actions.
    source_labels : [str], default is Undefined, optional
        UnderScoreSourceLabels - additional form of source labels source_labels for compatibility with original relabel config. if set  both sourceLabels and source_labels, sourceLabels has priority. for details https://github.com/VictoriaMetrics/operator/issues/131
    targetLabel : str, default is Undefined, optional
        Label to which the resulting value is written in a replace action. It is mandatory for replace actions. Regex capture groups are available.
    target_label : str, default is Undefined, optional
        UnderScoreTargetLabel - additional form of target label - target_label for compatibility with original relabel config. if set  both targetLabel and target_label, targetLabel has priority. for details https://github.com/VictoriaMetrics/operator/issues/131
    """


    action?: str

    $if?: any

    labels?: {str:str}

    match?: str

    modulus?: int

    regex?: str

    replacement?: str

    separator?: str

    sourceLabels?: [str]

    source_labels?: [str]

    targetLabel?: str

    target_label?: str


schema OperatorVictoriametricsComV1beta1VMAgentSpecProbeSelector:
    """
    ProbeSelector defines VMProbe to be selected for target probing. Works in combination with NamespaceSelector. NamespaceSelector nil - only objects at VMAgent namespace. Selector nil - only objects at NamespaceSelector namespaces. If both nil - behaviour controlled by selectAllByDefault

    Attributes
    ----------
    matchExpressions : [OperatorVictoriametricsComV1beta1VMAgentSpecProbeSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [OperatorVictoriametricsComV1beta1VMAgentSpecProbeSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OperatorVictoriametricsComV1beta1VMAgentSpecProbeSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema OperatorVictoriametricsComV1beta1VMAgentSpecReadinessGatesItems0:
    """
    PodReadinessGate contains the reference to a pod condition

    Attributes
    ----------
    conditionType : str, default is Undefined, required
        ConditionType refers to a condition in the pod's condition list with matching type.
    """


    conditionType: str


schema OperatorVictoriametricsComV1beta1VMAgentSpecRelabelConfig:
    """
    RelabelConfig ConfigMap with global relabel config -remoteWrite.relabelConfig This relabeling is applied to all the collected metrics before sending them to remote storage.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0:
    """
    VMAgentRemoteWriteSpec defines the remote storage configuration for VmAgent

    Attributes
    ----------
    basicAuth : OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0BasicAuth, default is Undefined, optional
        basic auth
    bearerTokenSecret : OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0BearerTokenSecret, default is Undefined, optional
        bearer token secret
    headers : [str], default is Undefined, optional
        Headers allow configuring custom http headers Must be in form of semicolon separated header with value e.g. headerName: headerValue vmagent supports since 1.79.0 version
    inlineUrlRelabelConfig : [OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0InlineURLRelabelConfigItems0], default is Undefined, optional
        InlineUrlRelabelConfig defines relabeling config for remoteWriteURL, it can be defined at crd spec.
    oauth2 : OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0Oauth2, default is Undefined, optional
        oauth2
    sendTimeout : str, default is Undefined, optional
        Timeout for sending a single block of data to -remoteWrite.url (default 1m0s)
    streamAggrConfig : OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0StreamAggrConfig, default is Undefined, optional
        stream aggr config
    tlsConfig : OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0TLSConfig, default is Undefined, optional
        tls config
    url : str, default is Undefined, required
        URL of the endpoint to send samples to.
    urlRelabelConfig : OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0URLRelabelConfig, default is Undefined, optional
        url relabel config
    """


    basicAuth?: OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0BasicAuth

    bearerTokenSecret?: OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0BearerTokenSecret

    headers?: [str]

    inlineUrlRelabelConfig?: [OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0InlineURLRelabelConfigItems0]

    oauth2?: OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0Oauth2

    sendTimeout?: str

    streamAggrConfig?: OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0StreamAggrConfig

    tlsConfig?: OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0TLSConfig

    url: str

    urlRelabelConfig?: OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0URLRelabelConfig


    check:
        regex.match(str(sendTimeout), r"[0-9]+(ms|s|m|h)") if sendTimeout


schema OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0BasicAuth:
    """
    BasicAuth allow an endpoint to authenticate over basic authentication

    Attributes
    ----------
    password : OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0BasicAuthPassword, default is Undefined, optional
        password
    password_file : str, default is Undefined, optional
        PasswordFile defines path to password file at disk
    username : OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0BasicAuthUsername, default is Undefined, optional
        username
    """


    password?: OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0BasicAuthPassword

    password_file?: str

    username?: OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0BasicAuthUsername


schema OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0BasicAuthPassword:
    """
    The secret in the service scrape namespace that contains the password for authentication. It must be at them same namespace as CRD

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0BasicAuthUsername:
    """
    The secret in the service scrape namespace that contains the username for authentication. It must be at them same namespace as CRD

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0BearerTokenSecret:
    """
    Optional bearer auth token to use for -remoteWrite.url

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0InlineURLRelabelConfigItems0:
    """
    RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion. It defines `<metric_relabel_configs>`-section of configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs

    Attributes
    ----------
    action : str, default is Undefined, optional
        Action to perform based on regex matching. Default is 'replace'
    $if : any, default is Undefined, optional
        If represents metricsQL match expression (or list of expressions): '{__name__=~"foo_.*"}'
    labels : {str:str}, default is Undefined, optional
        Labels is used together with Match for `action: graphite`
    match : str, default is Undefined, optional
        Match is used together with Labels for `action: graphite`
    modulus : int, default is Undefined, optional
        Modulus to take of the hash of the source label values.
    regex : str, default is Undefined, optional
        Regular expression against which the extracted value is matched. Default is '(.*)'
    replacement : str, default is Undefined, optional
        Replacement value against which a regex replace is performed if the regular expression matches. Regex capture groups are available. Default is '$1'
    separator : str, default is Undefined, optional
        Separator placed between concatenated source label values. default is ';'.
    sourceLabels : [str], default is Undefined, optional
        The source labels select values from existing labels. Their content is concatenated using the configured separator and matched against the configured regular expression for the replace, keep, and drop actions.
    source_labels : [str], default is Undefined, optional
        UnderScoreSourceLabels - additional form of source labels source_labels for compatibility with original relabel config. if set  both sourceLabels and source_labels, sourceLabels has priority. for details https://github.com/VictoriaMetrics/operator/issues/131
    targetLabel : str, default is Undefined, optional
        Label to which the resulting value is written in a replace action. It is mandatory for replace actions. Regex capture groups are available.
    target_label : str, default is Undefined, optional
        UnderScoreTargetLabel - additional form of target label - target_label for compatibility with original relabel config. if set  both targetLabel and target_label, targetLabel has priority. for details https://github.com/VictoriaMetrics/operator/issues/131
    """


    action?: str

    $if?: any

    labels?: {str:str}

    match?: str

    modulus?: int

    regex?: str

    replacement?: str

    separator?: str

    sourceLabels?: [str]

    source_labels?: [str]

    targetLabel?: str

    target_label?: str


schema OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0Oauth2:
    """
    OAuth2 defines auth configuration

    Attributes
    ----------
    client_id : OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0Oauth2ClientID, default is Undefined, required
        client id
    client_secret : OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0Oauth2ClientSecret, default is Undefined, optional
        client secret
    client_secret_file : str, default is Undefined, optional
        ClientSecretFile defines path for client secret file.
    endpoint_params : {str:str}, default is Undefined, optional
        Parameters to append to the token URL
    scopes : [str], default is Undefined, optional
        OAuth2 scopes used for the token request
    token_url : str, default is Undefined, required
        The URL to fetch the token from
    """


    client_id: OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0Oauth2ClientID

    client_secret?: OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0Oauth2ClientSecret

    client_secret_file?: str

    endpoint_params?: {str:str}

    scopes?: [str]

    token_url: str


    check:
        len(token_url) >= 1


schema OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0Oauth2ClientID:
    """
    The secret or configmap containing the OAuth2 client id

    Attributes
    ----------
    configMap : OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0Oauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0Oauth2ClientIDSecret, default is Undefined, optional
        secret
    """


    configMap?: OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0Oauth2ClientIDConfigMap

    secret?: OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0Oauth2ClientIDSecret


schema OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0Oauth2ClientIDConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0Oauth2ClientIDSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0Oauth2ClientSecret:
    """
    The secret containing the OAuth2 client secret

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0StreamAggrConfig:
    """
    StreamAggrConfig defines stream aggregation configuration for VMAgent for -remoteWrite.url

    Attributes
    ----------
    dedupInterval : str, default is Undefined, optional
        Allows setting different de-duplication intervals per each configured remote storage
    dropInput : bool, default is Undefined, optional
        Allow drop all the input samples after the aggregation
    keepInput : bool, default is Undefined, optional
        Allows writing both raw and aggregate data
    rules : [OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0StreamAggrConfigRulesItems0], default is Undefined, required
        Stream aggregation rules
    """


    dedupInterval?: str

    dropInput?: bool

    keepInput?: bool

    rules: [OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0StreamAggrConfigRulesItems0]


schema OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0StreamAggrConfigRulesItems0:
    """
    StreamAggrRule defines the rule in stream aggregation config

    Attributes
    ----------
    by : [str], default is Undefined, optional
        By is an optional list of labels for grouping input series. 
         See also Without. 
         If neither By nor Without are set, then the Outputs are calculated individually per each input time series.
    input_relabel_configs : [OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0StreamAggrConfigRulesItems0InputRelabelConfigsItems0], default is Undefined, optional
        InputRelabelConfigs is an optional relabeling rules, which are applied on the input before aggregation.
    interval : str, default is Undefined, required
        Interval is the interval between aggregations.
    match : any, default is Undefined, optional
        Match is a label selector (or list of label selectors) for filtering time series for the given selector. 
         If the match isn't set, then all the input time series are processed.
    output_relabel_configs : [OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0StreamAggrConfigRulesItems0OutputRelabelConfigsItems0], default is Undefined, optional
        OutputRelabelConfigs is an optional relabeling rules, which are applied on the aggregated output before being sent to remote storage.
    outputs : [str], default is Undefined, required
        Outputs is a list of output aggregate functions to produce. 
         The following names are allowed: 
         - total - aggregates input counters - increase - counts the increase over input counters - count_series - counts the input series - count_samples - counts the input samples - sum_samples - sums the input samples - last - the last biggest sample value - min - the minimum sample value - max - the maximum sample value - avg - the average value across all the samples - stddev - standard deviation across all the samples - stdvar - standard variance across all the samples - histogram_bucket - creates VictoriaMetrics histogram for input samples - quantiles(phi1, ..., phiN) - quantiles' estimation for phi in the range [0..1] 
         The output time series will have the following names: 
         input_name:aggr_<interval>_<output>
    staleness_interval : str, default is Undefined, optional
        StalenessInterval defines an interval after which the series state will be reset if no samples have been sent during it.
    without : [str], default is Undefined, optional
        Without is an optional list of labels, which must be excluded when grouping input series. 
         See also By. 
         If neither By nor Without are set, then the Outputs are calculated individually per each input time series.
    """


    by?: [str]

    input_relabel_configs?: [OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0StreamAggrConfigRulesItems0InputRelabelConfigsItems0]

    interval: str

    match?: any

    output_relabel_configs?: [OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0StreamAggrConfigRulesItems0OutputRelabelConfigsItems0]

    outputs: [str]

    staleness_interval?: str

    without?: [str]


schema OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0StreamAggrConfigRulesItems0InputRelabelConfigsItems0:
    """
    RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion. It defines `<metric_relabel_configs>`-section of configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs

    Attributes
    ----------
    action : str, default is Undefined, optional
        Action to perform based on regex matching. Default is 'replace'
    $if : any, default is Undefined, optional
        If represents metricsQL match expression (or list of expressions): '{__name__=~"foo_.*"}'
    labels : {str:str}, default is Undefined, optional
        Labels is used together with Match for `action: graphite`
    match : str, default is Undefined, optional
        Match is used together with Labels for `action: graphite`
    modulus : int, default is Undefined, optional
        Modulus to take of the hash of the source label values.
    regex : str, default is Undefined, optional
        Regular expression against which the extracted value is matched. Default is '(.*)'
    replacement : str, default is Undefined, optional
        Replacement value against which a regex replace is performed if the regular expression matches. Regex capture groups are available. Default is '$1'
    separator : str, default is Undefined, optional
        Separator placed between concatenated source label values. default is ';'.
    sourceLabels : [str], default is Undefined, optional
        The source labels select values from existing labels. Their content is concatenated using the configured separator and matched against the configured regular expression for the replace, keep, and drop actions.
    source_labels : [str], default is Undefined, optional
        UnderScoreSourceLabels - additional form of source labels source_labels for compatibility with original relabel config. if set  both sourceLabels and source_labels, sourceLabels has priority. for details https://github.com/VictoriaMetrics/operator/issues/131
    targetLabel : str, default is Undefined, optional
        Label to which the resulting value is written in a replace action. It is mandatory for replace actions. Regex capture groups are available.
    target_label : str, default is Undefined, optional
        UnderScoreTargetLabel - additional form of target label - target_label for compatibility with original relabel config. if set  both targetLabel and target_label, targetLabel has priority. for details https://github.com/VictoriaMetrics/operator/issues/131
    """


    action?: str

    $if?: any

    labels?: {str:str}

    match?: str

    modulus?: int

    regex?: str

    replacement?: str

    separator?: str

    sourceLabels?: [str]

    source_labels?: [str]

    targetLabel?: str

    target_label?: str


schema OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0StreamAggrConfigRulesItems0OutputRelabelConfigsItems0:
    """
    RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion. It defines `<metric_relabel_configs>`-section of configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs

    Attributes
    ----------
    action : str, default is Undefined, optional
        Action to perform based on regex matching. Default is 'replace'
    $if : any, default is Undefined, optional
        If represents metricsQL match expression (or list of expressions): '{__name__=~"foo_.*"}'
    labels : {str:str}, default is Undefined, optional
        Labels is used together with Match for `action: graphite`
    match : str, default is Undefined, optional
        Match is used together with Labels for `action: graphite`
    modulus : int, default is Undefined, optional
        Modulus to take of the hash of the source label values.
    regex : str, default is Undefined, optional
        Regular expression against which the extracted value is matched. Default is '(.*)'
    replacement : str, default is Undefined, optional
        Replacement value against which a regex replace is performed if the regular expression matches. Regex capture groups are available. Default is '$1'
    separator : str, default is Undefined, optional
        Separator placed between concatenated source label values. default is ';'.
    sourceLabels : [str], default is Undefined, optional
        The source labels select values from existing labels. Their content is concatenated using the configured separator and matched against the configured regular expression for the replace, keep, and drop actions.
    source_labels : [str], default is Undefined, optional
        UnderScoreSourceLabels - additional form of source labels source_labels for compatibility with original relabel config. if set  both sourceLabels and source_labels, sourceLabels has priority. for details https://github.com/VictoriaMetrics/operator/issues/131
    targetLabel : str, default is Undefined, optional
        Label to which the resulting value is written in a replace action. It is mandatory for replace actions. Regex capture groups are available.
    target_label : str, default is Undefined, optional
        UnderScoreTargetLabel - additional form of target label - target_label for compatibility with original relabel config. if set  both targetLabel and target_label, targetLabel has priority. for details https://github.com/VictoriaMetrics/operator/issues/131
    """


    action?: str

    $if?: any

    labels?: {str:str}

    match?: str

    modulus?: int

    regex?: str

    replacement?: str

    separator?: str

    sourceLabels?: [str]

    source_labels?: [str]

    targetLabel?: str

    target_label?: str


schema OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0TLSConfig:
    """
    TLSConfig describes tls configuration for remote write target

    Attributes
    ----------
    ca : OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0TLSConfigCa, default is Undefined, optional
        ca
    caFile : str, default is Undefined, optional
        Path to the CA cert in the container to use for the targets.
    cert : OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0TLSConfigCert, default is Undefined, optional
        cert
    certFile : str, default is Undefined, optional
        Path to the client cert file in the container for the targets.
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keyFile : str, default is Undefined, optional
        Path to the client key file in the container for the targets.
    keySecret : OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0TLSConfigKeySecret, default is Undefined, optional
        key secret
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """


    ca?: OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0TLSConfigCa

    caFile?: str

    cert?: OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0TLSConfigCert

    certFile?: str

    insecureSkipVerify?: bool

    keyFile?: str

    keySecret?: OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0TLSConfigKeySecret

    serverName?: str


schema OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0TLSConfigCa:
    """
    Stuct containing the CA cert to use for the targets.

    Attributes
    ----------
    configMap : OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0TLSConfigCaSecret, default is Undefined, optional
        secret
    """


    configMap?: OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0TLSConfigCaConfigMap

    secret?: OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0TLSConfigCaSecret


schema OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0TLSConfigCaConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0TLSConfigCaSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0TLSConfigCert:
    """
    Struct containing the client cert file for the targets.

    Attributes
    ----------
    configMap : OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0TLSConfigCertSecret, default is Undefined, optional
        secret
    """


    configMap?: OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0TLSConfigCertConfigMap

    secret?: OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0TLSConfigCertSecret


schema OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0TLSConfigCertConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0TLSConfigCertSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0TLSConfigKeySecret:
    """
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteItems0URLRelabelConfig:
    """
    ConfigMap with relabeling config which is applied to metrics before sending them to the corresponding -remoteWrite.url

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAgentSpecRemoteWriteSettings:
    """
    RemoteWriteSettings defines global settings for all remoteWrite urls.

    Attributes
    ----------
    flushInterval : str, default is Undefined, optional
        Interval for flushing the data to remote storage. (default 1s)
    label : {str:str}, default is Undefined, optional
        Labels in the form 'name=value' to add to all the metrics before sending them. This overrides the label if it already exists.
    maxBlockSize : int, default is Undefined, optional
        The maximum size in bytes of unpacked request to send to remote storage
    maxDiskUsagePerURL : int, default is Undefined, optional
        The maximum file-based buffer size in bytes at -remoteWrite.tmpDataPath
    queues : int, default is Undefined, optional
        The number of concurrent queues
    showURL : bool, default is Undefined, optional
        Whether to show -remoteWrite.url in the exported metrics. It is hidden by default, since it can contain sensitive auth info
    tmpDataPath : str, default is Undefined, optional
        Path to directory where temporary data for remote write component is stored (default vmagent-remotewrite-data)
    useMultiTenantMode : bool, default is Undefined, optional
        Configures vmagent in multi-tenant mode with direct cluster support docs https://docs.victoriametrics.com/vmagent.html#multitenancy it's global setting and affects all remote storage configurations
    """


    flushInterval?: str

    label?: {str:str}

    maxBlockSize?: int

    maxDiskUsagePerURL?: int

    queues?: int

    showURL?: bool

    tmpDataPath?: str

    useMultiTenantMode?: bool


    check:
        regex.match(str(flushInterval), r"[0-9]+(ms|s|m|h)") if flushInterval


schema OperatorVictoriametricsComV1beta1VMAgentSpecResources:
    """
    Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ if not specified - default setting will be used

    Attributes
    ----------
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, limits in limits {regex.match(str(limits), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if limits } if limits
        all _, requests in requests {regex.match(str(requests), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if requests } if requests


schema OperatorVictoriametricsComV1beta1VMAgentSpecRollingUpdate:
    """
    RollingUpdate - overrides deployment update params.

    Attributes
    ----------
    maxSurge : int | str, default is Undefined, optional
        The maximum number of pods that can be scheduled above the desired number of pods. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. Defaults to 25%. Example: when this is set to 30%, the new ReplicaSet can be scaled up immediately when the rolling update starts, such that the total number of old and new pods do not exceed 130% of desired pods. Once old pods have been killed, new ReplicaSet can be scaled up further, ensuring that total number of pods running at any time during the update is at most 130% of desired pods.
    maxUnavailable : int | str, default is Undefined, optional
        The maximum number of pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. Defaults to 25%. Example: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods immediately when the rolling update starts. Once new pods are ready, old ReplicaSet can be scaled down further, followed by scaling up the new ReplicaSet, ensuring that the total number of pods available at all times during the update is at least 70% of desired pods.
    """


    maxSurge?: int | str

    maxUnavailable?: int | str


schema OperatorVictoriametricsComV1beta1VMAgentSpecServiceScrapeNamespaceSelector:
    """
    ServiceScrapeNamespaceSelector Namespaces to be selected for VMServiceScrape discovery. Works in combination with Selector. NamespaceSelector nil - only objects at VMAgent namespace. Selector nil - only objects at NamespaceSelector namespaces. If both nil - behaviour controlled by selectAllByDefault

    Attributes
    ----------
    matchExpressions : [OperatorVictoriametricsComV1beta1VMAgentSpecServiceScrapeNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [OperatorVictoriametricsComV1beta1VMAgentSpecServiceScrapeNamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OperatorVictoriametricsComV1beta1VMAgentSpecServiceScrapeNamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema OperatorVictoriametricsComV1beta1VMAgentSpecServiceScrapeRelabelTemplateItems0:
    """
    RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion. It defines `<metric_relabel_configs>`-section of configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs

    Attributes
    ----------
    action : str, default is Undefined, optional
        Action to perform based on regex matching. Default is 'replace'
    $if : any, default is Undefined, optional
        If represents metricsQL match expression (or list of expressions): '{__name__=~"foo_.*"}'
    labels : {str:str}, default is Undefined, optional
        Labels is used together with Match for `action: graphite`
    match : str, default is Undefined, optional
        Match is used together with Labels for `action: graphite`
    modulus : int, default is Undefined, optional
        Modulus to take of the hash of the source label values.
    regex : str, default is Undefined, optional
        Regular expression against which the extracted value is matched. Default is '(.*)'
    replacement : str, default is Undefined, optional
        Replacement value against which a regex replace is performed if the regular expression matches. Regex capture groups are available. Default is '$1'
    separator : str, default is Undefined, optional
        Separator placed between concatenated source label values. default is ';'.
    sourceLabels : [str], default is Undefined, optional
        The source labels select values from existing labels. Their content is concatenated using the configured separator and matched against the configured regular expression for the replace, keep, and drop actions.
    source_labels : [str], default is Undefined, optional
        UnderScoreSourceLabels - additional form of source labels source_labels for compatibility with original relabel config. if set  both sourceLabels and source_labels, sourceLabels has priority. for details https://github.com/VictoriaMetrics/operator/issues/131
    targetLabel : str, default is Undefined, optional
        Label to which the resulting value is written in a replace action. It is mandatory for replace actions. Regex capture groups are available.
    target_label : str, default is Undefined, optional
        UnderScoreTargetLabel - additional form of target label - target_label for compatibility with original relabel config. if set  both targetLabel and target_label, targetLabel has priority. for details https://github.com/VictoriaMetrics/operator/issues/131
    """


    action?: str

    $if?: any

    labels?: {str:str}

    match?: str

    modulus?: int

    regex?: str

    replacement?: str

    separator?: str

    sourceLabels?: [str]

    source_labels?: [str]

    targetLabel?: str

    target_label?: str


schema OperatorVictoriametricsComV1beta1VMAgentSpecServiceScrapeSelector:
    """
    ServiceScrapeSelector defines ServiceScrapes to be selected for target discovery. Works in combination with NamespaceSelector. NamespaceSelector nil - only objects at VMAgent namespace. Selector nil - only objects at NamespaceSelector namespaces. If both nil - behaviour controlled by selectAllByDefault

    Attributes
    ----------
    matchExpressions : [OperatorVictoriametricsComV1beta1VMAgentSpecServiceScrapeSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [OperatorVictoriametricsComV1beta1VMAgentSpecServiceScrapeSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OperatorVictoriametricsComV1beta1VMAgentSpecServiceScrapeSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema OperatorVictoriametricsComV1beta1VMAgentSpecServiceSpec:
    """
    ServiceSpec that will be added to vmagent service spec

    Attributes
    ----------
    spec : any, default is Undefined, required
        ServiceSpec describes the attributes that a user creates on a service. More info: https://kubernetes.io/docs/concepts/services-networking/service/
    metadata : OperatorVictoriametricsComV1beta1VMAgentSpecServiceSpecMetadata, default is Undefined, optional
        metadata
    """


    spec: any

    metadata?: OperatorVictoriametricsComV1beta1VMAgentSpecServiceSpecMetadata


schema OperatorVictoriametricsComV1beta1VMAgentSpecServiceSpecMetadata:
    """
    EmbeddedObjectMetadata defines objectMeta for additional service.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
    labels : {str:str}, default is Undefined, optional
        Labels Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
    name : str, default is Undefined, optional
        Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names
    """


    annotations?: {str:str}

    labels?: {str:str}

    name?: str


schema OperatorVictoriametricsComV1beta1VMAgentSpecStatefulStorage:
    """
    StatefulStorage configures storage for StatefulSet

    Attributes
    ----------
    disableMountSubPath : bool, default is Undefined, optional
        Deprecated: subPath usage will be disabled by default in a future release, this option will become unnecessary. DisableMountSubPath allows to remove any subPath usage in volume mounts.
    emptyDir : OperatorVictoriametricsComV1beta1VMAgentSpecStatefulStorageEmptyDir, default is Undefined, optional
        empty dir
    volumeClaimTemplate : OperatorVictoriametricsComV1beta1VMAgentSpecStatefulStorageVolumeClaimTemplate, default is Undefined, optional
        volume claim template
    """


    disableMountSubPath?: bool

    emptyDir?: OperatorVictoriametricsComV1beta1VMAgentSpecStatefulStorageEmptyDir

    volumeClaimTemplate?: OperatorVictoriametricsComV1beta1VMAgentSpecStatefulStorageVolumeClaimTemplate


schema OperatorVictoriametricsComV1beta1VMAgentSpecStatefulStorageEmptyDir:
    """
    EmptyDirVolumeSource to be used by the Prometheus StatefulSets. If specified, used in place of any volumeClaimTemplate. More info: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir

    Attributes
    ----------
    medium : str, default is Undefined, optional
        medium represents what type of storage medium should back this directory. The default is "" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
    sizeLimit : int | str, default is Undefined, optional
        sizeLimit is the total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir
    """


    medium?: str

    sizeLimit?: int | str


    check:
        regex.match(str(sizeLimit), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if sizeLimit


schema OperatorVictoriametricsComV1beta1VMAgentSpecStatefulStorageVolumeClaimTemplate:
    """
    A PVC spec to be used by the VMAlertManager StatefulSets.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is Undefined, optional
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : OperatorVictoriametricsComV1beta1VMAgentSpecStatefulStorageVolumeClaimTemplateMetadata, default is Undefined, optional
        metadata
    spec : OperatorVictoriametricsComV1beta1VMAgentSpecStatefulStorageVolumeClaimTemplateSpec, default is Undefined, optional
        spec
    status : OperatorVictoriametricsComV1beta1VMAgentSpecStatefulStorageVolumeClaimTemplateStatus, default is Undefined, optional
        status
    """


    apiVersion?: str

    kind?: str

    metadata?: OperatorVictoriametricsComV1beta1VMAgentSpecStatefulStorageVolumeClaimTemplateMetadata

    spec?: OperatorVictoriametricsComV1beta1VMAgentSpecStatefulStorageVolumeClaimTemplateSpec

    status?: OperatorVictoriametricsComV1beta1VMAgentSpecStatefulStorageVolumeClaimTemplateStatus


schema OperatorVictoriametricsComV1beta1VMAgentSpecStatefulStorageVolumeClaimTemplateMetadata:
    """
    EmbeddedMetadata contains metadata relevant to an EmbeddedResource.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
    labels : {str:str}, default is Undefined, optional
        Labels Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
    name : str, default is Undefined, optional
        Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names
    """


    annotations?: {str:str}

    labels?: {str:str}

    name?: str


schema OperatorVictoriametricsComV1beta1VMAgentSpecStatefulStorageVolumeClaimTemplateSpec:
    """
    Spec defines the desired characteristics of a volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims

    Attributes
    ----------
    accessModes : [str], default is Undefined, optional
        accessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
    storageClassName : str, default is Undefined, optional
        storageClassName is the name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
    volumeMode : str, default is Undefined, optional
        volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
    volumeName : str, default is Undefined, optional
        volumeName is the binding reference to the PersistentVolume backing this claim.
    dataSource : OperatorVictoriametricsComV1beta1VMAgentSpecStatefulStorageVolumeClaimTemplateSpecDataSource, default is Undefined, optional
        data source
    dataSourceRef : OperatorVictoriametricsComV1beta1VMAgentSpecStatefulStorageVolumeClaimTemplateSpecDataSourceRef, default is Undefined, optional
        data source ref
    resources : OperatorVictoriametricsComV1beta1VMAgentSpecStatefulStorageVolumeClaimTemplateSpecResources, default is Undefined, optional
        resources
    selector : OperatorVictoriametricsComV1beta1VMAgentSpecStatefulStorageVolumeClaimTemplateSpecSelector, default is Undefined, optional
        selector
    """


    accessModes?: [str]

    storageClassName?: str

    volumeMode?: str

    volumeName?: str

    dataSource?: OperatorVictoriametricsComV1beta1VMAgentSpecStatefulStorageVolumeClaimTemplateSpecDataSource

    dataSourceRef?: OperatorVictoriametricsComV1beta1VMAgentSpecStatefulStorageVolumeClaimTemplateSpecDataSourceRef

    resources?: OperatorVictoriametricsComV1beta1VMAgentSpecStatefulStorageVolumeClaimTemplateSpecResources

    selector?: OperatorVictoriametricsComV1beta1VMAgentSpecStatefulStorageVolumeClaimTemplateSpecSelector


schema OperatorVictoriametricsComV1beta1VMAgentSpecStatefulStorageVolumeClaimTemplateSpecDataSource:
    """
    dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
    kind : str, default is Undefined, required
        Kind is the type of resource being referenced
    name : str, default is Undefined, required
        Name is the name of resource being referenced
    """


    apiGroup?: str

    kind: str

    name: str


schema OperatorVictoriametricsComV1beta1VMAgentSpecStatefulStorageVolumeClaimTemplateSpecDataSourceRef:
    """
    dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
    kind : str, default is Undefined, required
        Kind is the type of resource being referenced
    name : str, default is Undefined, required
        Name is the name of resource being referenced
    """


    apiGroup?: str

    kind: str

    name: str


schema OperatorVictoriametricsComV1beta1VMAgentSpecStatefulStorageVolumeClaimTemplateSpecResources:
    """
    resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources

    Attributes
    ----------
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, limits in limits {regex.match(str(limits), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if limits } if limits
        all _, requests in requests {regex.match(str(requests), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if requests } if requests


schema OperatorVictoriametricsComV1beta1VMAgentSpecStatefulStorageVolumeClaimTemplateSpecSelector:
    """
    selector is a label query over volumes to consider for binding.

    Attributes
    ----------
    matchExpressions : [OperatorVictoriametricsComV1beta1VMAgentSpecStatefulStorageVolumeClaimTemplateSpecSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [OperatorVictoriametricsComV1beta1VMAgentSpecStatefulStorageVolumeClaimTemplateSpecSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OperatorVictoriametricsComV1beta1VMAgentSpecStatefulStorageVolumeClaimTemplateSpecSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema OperatorVictoriametricsComV1beta1VMAgentSpecStatefulStorageVolumeClaimTemplateStatus:
    """
    Status represents the current information/status of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims

    Attributes
    ----------
    accessModes : [str], default is Undefined, optional
        accessModes contains the actual access modes the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
    allocatedResources : {str:int | str}, default is Undefined, optional
        allocatedResources is the storage resource within AllocatedResources tracks the capacity allocated to a PVC. It may be larger than the actual capacity when a volume expansion operation is requested. For storage quota, the larger value from allocatedResources and PVC.spec.resources is used. If allocatedResources is not set, PVC.spec.resources alone is used for quota calculation. If a volume expansion capacity request is lowered, allocatedResources is only lowered if there are no expansion operations in progress and if the actual volume capacity is equal or lower than the requested capacity. This is an alpha field and requires enabling RecoverVolumeExpansionFailure feature.
    capacity : {str:int | str}, default is Undefined, optional
        capacity represents the actual resources of the underlying volume.
    conditions : [OperatorVictoriametricsComV1beta1VMAgentSpecStatefulStorageVolumeClaimTemplateStatusConditionsItems0], default is Undefined, optional
        conditions is the current Condition of persistent volume claim. If underlying persistent volume is being resized then the Condition will be set to 'ResizeStarted'.
    phase : str, default is Undefined, optional
        phase represents the current phase of PersistentVolumeClaim.
    resizeStatus : str, default is Undefined, optional
        resizeStatus stores status of resize operation. ResizeStatus is not set by default but when expansion is complete resizeStatus is set to empty string by resize controller or kubelet. This is an alpha field and requires enabling RecoverVolumeExpansionFailure feature.
    """


    accessModes?: [str]

    allocatedResources?: {str:int | str}

    capacity?: {str:int | str}

    conditions?: [OperatorVictoriametricsComV1beta1VMAgentSpecStatefulStorageVolumeClaimTemplateStatusConditionsItems0]

    phase?: str

    resizeStatus?: str


    check:
        all _, allocatedResources in allocatedResources {regex.match(str(allocatedResources), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if allocatedResources } if allocatedResources
        all _, capacity in capacity {regex.match(str(capacity), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if capacity } if capacity


schema OperatorVictoriametricsComV1beta1VMAgentSpecStatefulStorageVolumeClaimTemplateStatusConditionsItems0:
    """
    PersistentVolumeClaimCondition contails details about state of pvc

    Attributes
    ----------
    lastProbeTime : str, default is Undefined, optional
        lastProbeTime is the time we probed the condition.
    lastTransitionTime : str, default is Undefined, optional
        lastTransitionTime is the time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        message is the human-readable message indicating details about last transition.
    reason : str, default is Undefined, optional
        reason is a unique, this should be a short, machine understandable string that gives the reason for condition's last transition. If it reports "ResizeStarted" that means the underlying persistent volume is being resized.
    status : str, default is Undefined, required
        status
    $type : str, default is Undefined, required
        PersistentVolumeClaimConditionType is a valid value of PersistentVolumeClaimCondition.Type
    """


    lastProbeTime?: str

    lastTransitionTime?: str

    message?: str

    reason?: str

    status: str

    $type: str


schema OperatorVictoriametricsComV1beta1VMAgentSpecStaticScrapeNamespaceSelector:
    """
    StaticScrapeNamespaceSelector defines Namespaces to be selected for VMStaticScrape discovery. Works in combination with NamespaceSelector. NamespaceSelector nil - only objects at VMAgent namespace. Selector nil - only objects at NamespaceSelector namespaces. If both nil - behaviour controlled by selectAllByDefault

    Attributes
    ----------
    matchExpressions : [OperatorVictoriametricsComV1beta1VMAgentSpecStaticScrapeNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [OperatorVictoriametricsComV1beta1VMAgentSpecStaticScrapeNamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OperatorVictoriametricsComV1beta1VMAgentSpecStaticScrapeNamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema OperatorVictoriametricsComV1beta1VMAgentSpecStaticScrapeRelabelTemplateItems0:
    """
    RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion. It defines `<metric_relabel_configs>`-section of configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs

    Attributes
    ----------
    action : str, default is Undefined, optional
        Action to perform based on regex matching. Default is 'replace'
    $if : any, default is Undefined, optional
        If represents metricsQL match expression (or list of expressions): '{__name__=~"foo_.*"}'
    labels : {str:str}, default is Undefined, optional
        Labels is used together with Match for `action: graphite`
    match : str, default is Undefined, optional
        Match is used together with Labels for `action: graphite`
    modulus : int, default is Undefined, optional
        Modulus to take of the hash of the source label values.
    regex : str, default is Undefined, optional
        Regular expression against which the extracted value is matched. Default is '(.*)'
    replacement : str, default is Undefined, optional
        Replacement value against which a regex replace is performed if the regular expression matches. Regex capture groups are available. Default is '$1'
    separator : str, default is Undefined, optional
        Separator placed between concatenated source label values. default is ';'.
    sourceLabels : [str], default is Undefined, optional
        The source labels select values from existing labels. Their content is concatenated using the configured separator and matched against the configured regular expression for the replace, keep, and drop actions.
    source_labels : [str], default is Undefined, optional
        UnderScoreSourceLabels - additional form of source labels source_labels for compatibility with original relabel config. if set  both sourceLabels and source_labels, sourceLabels has priority. for details https://github.com/VictoriaMetrics/operator/issues/131
    targetLabel : str, default is Undefined, optional
        Label to which the resulting value is written in a replace action. It is mandatory for replace actions. Regex capture groups are available.
    target_label : str, default is Undefined, optional
        UnderScoreTargetLabel - additional form of target label - target_label for compatibility with original relabel config. if set  both targetLabel and target_label, targetLabel has priority. for details https://github.com/VictoriaMetrics/operator/issues/131
    """


    action?: str

    $if?: any

    labels?: {str:str}

    match?: str

    modulus?: int

    regex?: str

    replacement?: str

    separator?: str

    sourceLabels?: [str]

    source_labels?: [str]

    targetLabel?: str

    target_label?: str


schema OperatorVictoriametricsComV1beta1VMAgentSpecStaticScrapeSelector:
    """
    StaticScrapeSelector defines PodScrapes to be selected for target discovery. Works in combination with NamespaceSelector. If both nil - match everything. NamespaceSelector nil - only objects at VMAgent namespace. Selector nil - only objects at NamespaceSelector namespaces.

    Attributes
    ----------
    matchExpressions : [OperatorVictoriametricsComV1beta1VMAgentSpecStaticScrapeSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [OperatorVictoriametricsComV1beta1VMAgentSpecStaticScrapeSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OperatorVictoriametricsComV1beta1VMAgentSpecStaticScrapeSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema OperatorVictoriametricsComV1beta1VMAgentSpecTolerationsItems0:
    """
    The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.

    Attributes
    ----------
    effect : str, default is Undefined, optional
        Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
    key : str, default is Undefined, optional
        Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
    operator : str, default is Undefined, optional
        Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
    tolerationSeconds : int, default is Undefined, optional
        TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
    value : str, default is Undefined, optional
        Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
    """


    effect?: str

    key?: str

    operator?: str

    tolerationSeconds?: int

    value?: str


schema OperatorVictoriametricsComV1beta1VMAgentSpecVolumeMountsItems0:
    """
    VolumeMount describes a mounting of a Volume within a container.

    Attributes
    ----------
    mountPath : str, default is Undefined, required
        Path within the container at which the volume should be mounted.  Must not contain ':'.
    mountPropagation : str, default is Undefined, optional
        mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
    name : str, default is Undefined, required
        This must match the Name of a Volume.
    readOnly : bool, default is Undefined, optional
        Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
    subPath : str, default is Undefined, optional
        Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
    subPathExpr : str, default is Undefined, optional
        Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
    """


    mountPath: str

    mountPropagation?: str

    name: str

    readOnly?: bool

    subPath?: str

    subPathExpr?: str


schema OperatorVictoriametricsComV1beta1VMAgentStatus:
    """
    VMAgentStatus defines the observed state of VMAgent

    Attributes
    ----------
    availableReplicas : int, default is Undefined, required
        AvailableReplicas Total number of available pods (ready for at least minReadySeconds) targeted by this VMAlert cluster.
    replicas : int, default is Undefined, required
        ReplicaCount Total number of pods targeted by this VMAgent
    selector : str, default is Undefined, required
        Selector string form of label value set for autoscaling
    shards : int, default is Undefined, required
        Shards represents total number of vmagent deployments with uniq scrape targets
    unavailableReplicas : int, default is Undefined, required
        UnavailableReplicas Total number of unavailable pods targeted by this VMAgent cluster.
    updatedReplicas : int, default is Undefined, required
        UpdatedReplicas Total number of non-terminated pods targeted by this VMAgent cluster that have the desired version spec.
    """


    availableReplicas: int

    replicas: int

    selector: str

    shards: int

    unavailableReplicas: int

    updatedReplicas: int


